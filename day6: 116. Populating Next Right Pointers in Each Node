//https://leetcode.com/problems/populating-next-right-pointers-in-each-node/
/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if(root==NULL)
        {
            return root;
        }
        Node* temp=root;
        while(temp->left!=NULL)
        {
            Node* n=temp;
            while(n!=NULL)
            {
                n->left->next=n->right;
                n->right->next=n->next==NULL?NULL:n->next->left;
                n=n->next;
            }
            temp=temp->left;
        }
        return root;
    }
};
